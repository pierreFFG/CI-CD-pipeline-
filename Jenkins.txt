I-/ JENKINS

#!/bin/bash
cd /home/ec2-user
sudo yum install java-1.8* -y
sudo yum install wget â€“y
sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
sudo amazon-linux-extras install epel -y 
sudo yum update -y 
sudo yum install jenkins java-1.8.0-openjdk-devel
sudo systemctl start jenkins
sudo systemctl enable jenkins
sudo systemctl status jenkins

go to web, copy public ip of EC2     http://public-ip 34.221.214.164:8080

http://34.221.214.164:8080/github-webhook/    (to connect your Jenkins instance to your GITHub Webhook so that when your start a job by pushing a code on Github, Github Webhook will directly trigger the Jenkins Inctance) 

sudo cat the link to obtain the Jenkins password
PW= 'dad3e3d6362b4d8baf8d2a3626cf8227'

Install the suggested plugins and the create first admin user

Go to manage Jenkins 
manage plugings on Jenkins....
click on "available"

* Sonarqube
* Maven integration 
* Pipeline Maven Integration
* Maven release plugin.

"install them without restart."

Go back to manage Jenkins. 

* Click on Global Tool Configuration.
* add JDK enter localJdk on name 
* add SonarQube enter SonarQube
* add maven installations enter localMaven.


II-/ SONARQUBE EC2:

ssh into SonarQube instance

* sudo yum install java-1.8.0 -y
* sudo wget -O /etc/yum.repos.d/sonar.repo http://downloads.sourceforge.net/project/sonar-pkg/rpm/sonar.repo
* sudo yum install sonar -y
* sudo service sonar start
* sudo service sonar status

go to web browser and paste EC2 publicIP 35.86.142.207:9000   
username = admin   
pw = admin


III-/ NEXUS: ssh into EC2

      A*** Set up the Nexus Instance

* sudo yum update -y
* sudo yum install wget -y
* sudo yum install java-1.8.0-openjdk.x86_64 -y
* sudo mkdir /app && cd /app
* sudo wget -O nexus.tar.gz https://download.sonatype.com/nexus/3/latest-unix.tar.gz
* sudo tar -xvf nexus.tar.gz

ls and edit the file accordingly

* sudo mv nexus-3.36.0-01/ nexus
* sudo adduser nexus
* sudo chown -R nexus:nexus /app/nexus
* sudo chown -R nexus:nexus /app/sonatype-work
* sudo vi /app/nexus/bin/nexus.rc
* uncomment #run_as_user
* add run_as_user="nexus"
* sudo vi /etc/systemd/system/nexus.service
copy and paste the below text

[Unit]
Description=nexus service
After=network.target

[Service]
Type=forking
LimitNOFILE=65536
User=nexus
Group=nexus
ExecStart=/app/nexus/bin/nexus start
ExecStop=/app/nexus/bin/nexus stop
User=nexus
Restart=on-abort

[Install]
WantedBy=multi-user.target

* sudo chkconfig nexus on
* sudo systemctl start nexus


go to web publicip 34.219.54.200:8081

* username=admin 
* sudo cat c4546782-117d-4fc0-a65d-1fc4f8fa7383 (to get the password)
* pw=admin 
* Click on Next
* Check "Enable anonymous access"
* Click on Finish
* Click on Settings
* Repositories/Create Repositories
* Select Maven 2 (group)
* select the member repositories one by one and move them to the right
* Create the repositories

AFTER, WE WILL TRY TO PUSH THE APPLICATION CODE TO OUR GITHUB BY CREATING A REPOSITORY AND CLONE IT INTO OUR LOCAL MACHINE SO THAT WE COULD PUSH THE APPLICATION CODE IN.

* cd~/.ssh/
* ls
(TO CHECK IF YOU HAVE YOUR GITHUB PUBLIC AND PRIVATE KEY INTO YOUR LOCAL MACHINE)
IF NO, RE-DO THE PROCESS BY 
* CLICKING ON SETTINGS IN YOUR GITHUB 
* AND SELECT "SSH AND GPG KEYS" 
* AFTER CLICK ON GENERATING SSH KEYS 
* CLICK ON GENERATING A NEW SSH KEY AND ADDING IT TO THE SSH-AGENT
* COPY THE FIRST COMMAND AND PASTE IN THE GITBASH CONSOLE AND UPDATE YOUR EMAIL
* CAT INTO THE PRIVATE KEY, COPY IT AND PASTE IT UNDER "SSH AND GPG KEYS/NEW SSH KEY" 
* CLICK ON "ADD SSH KEY"
* AFTER THAT, CLONE YOUR NEW REPO INTO YOUR LOCAL MACHINE BY ENTER "GIT CLONE + THE SSH LINK OF YOUR REPO" SINCE YOUR ARE INTO GITBASH


UPDATE THE NEXUS IP ON THE POM.XML file


	B*** Configure Jenkins with Nexus

1-) install maven

https://docs.aws.amazon.com/neptune/latest/userguide/iam-auth-connect-prerq.html
mvn -emp admin

<?xml version="1.0"?>
<settingsSecurity>
    <master>{wxkxTpTJ3zEHswbAySj3Fz5NOuNMTNEfQDDL54O7LtM=}</master>
</settingsSecurity>

sudo su
cd /root/
mkdir .m2
cd .m2
mvn -emp admin

* vi settings-security.xml

mvn-ep admin
{KFeb46C0C00HXjksaYBQSLOQ7DBB+1j8908BYRMi+ZI=}

* vi settings.xml (paste d below)

<?xml version="1.0" encoding="UTF-8"?>

<settings xmlns="http://maven.apache.org/POM/4.0.0"
		  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">

  <localRepository>/var/lib/jenkins/.m2/repository</localRepository>

<servers>
   <server>
        <id>nexus</id>
        <username>admin</username>
        <password>{+83SyVWa4nsH+UHHcfntvmJIjN0BuEDmh3fE5JCfra8=}</password>
    </server>
</servers>

<mirrors>
    <mirror>
      <id>nexus</id>
      <name>nexus</name>
		<url>http://34.219.54.200:8081/repository/maven_project/</url>
      <mirrorOf>*</mirrorOf>
    </mirror>
  </mirrors>
</settings>

mv settings.xml settings-security.xml /var/lib/jenkins/.m2
cd /var/lib/jenkins/.m2
chown jenkins:jenkins settings.xml settings-security.xml
chmod 755 settings.xml settings-security.xml

set-up Ansible in Jenkins EC2
sudo amazon-linux-extras install ansible2
sudo su
cd /root
useradd ansadmin
passwd ansadmin
cd /etc/ansible/
vi ansible.cfg (uncomment host_key_checking = False)
vi hosts

[dev]
34.214.90.145 ansible_user=ansadmin ansible_password=ansadmin
[prod]
34.217.131.216 ansible_user=ansadmin ansible_password=ansadmin



2-) Set-up Dev & Prod

ssh into Dev & Prod EC2
sudo su
useradd ansadmin
passwd ansadmin
vi /etc/ssh/sshd_config (uncomment PasswordAuthentication yes and uncomment PasswordAuthentication no)
service sshd restart
visudo
usermod -aG wheel ansadmin
sudo amazon-linux-extras install tomcat8.5 -y
sudo systemctl start tomcat
sudo systemctl status tomcat
